<?php

$example_persons_array = [
    "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á",
    "–°–∏–¥–æ—Ä–æ–≤ –ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤–∏—á",
    "–¢–∏—Ö–æ–Ω–æ–≤ –ú–∏—Ö–∞–∏–ª –ê–Ω–¥—Ä–µ–µ–≤–∏—á",
    "–®–µ–≤—á–µ–Ω–∫–æ –Æ—Ä–∏–π –ù–∏–∫–æ–ª–∞–µ–≤–∏—á",
    "–í–∞—Å–∏–ª—å–µ–≤ –ê—Ä—Ç–µ–º –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á",
    "–ù–æ–≤–∏–∫–æ–≤ –î–º–∏—Ç—Ä–∏–π –ï–≤–≥–µ–Ω—å–µ–≤–∏—á",
    "–û—Ä–ª–æ–≤ –ù–∏–∫–æ–ª–∞–π –°–µ—Ä–≥–µ–µ–≤–∏—á",
    "–°–º–∏—Ä–Ω–æ–≤ –í–ª–∞–¥–∏–º–∏—Ä –ê—Ä–∫–∞–¥—å–µ–≤–∏—á",
    "–ö—É–∑—å–º–∏–Ω –ê–Ω–¥—Ä–µ–π –ò–ª—å–∏—á",
    "–§–µ–¥–æ—Ä–æ–≤ –ú–∞–∫—Å–∏–º –í–∞–ª–µ—Ä—å–µ–≤–∏—á",
    "–ó–∞–π—Ü–µ–≤ –†–æ–º–∞–Ω –ù–∏–∫–∏—Ç–∏—á",
    "–ü–µ—Ç—Ä–æ–≤–∞ –ú–∞—Ä–∏—è –°–µ—Ä–≥–µ–µ–≤–Ω–∞",
    "–ö—É–∑–Ω–µ—Ü–æ–≤–∞ –ê–Ω–Ω–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞",
    "–ê–ª–µ–∫—Å–µ–µ–≤–∞ –û–ª—å–≥–∞ –ü–µ—Ç—Ä–æ–≤–Ω–∞",
    "–ö–∏–º –¢–∞—Ç—å—è–Ω–∞ –ò–≤–∞–Ω–æ–≤–Ω–∞",
    "–ú–æ—Ä–æ–∑–æ–≤–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ê–ª–µ–∫—Å–µ–µ–≤–Ω–∞",
    "–°–æ–∫–æ–ª–æ–≤–∞ –ï–ª–µ–Ω–∞ –í–∏–∫—Ç–æ—Ä–æ–≤–Ω–∞",
    "–õ–µ–±–µ–¥–µ–≤–∞ –°–≤–µ—Ç–ª–∞–Ω–∞ –ü–∞–≤–ª–æ–≤–Ω–∞",
    "–ö—Ä–∞–≤—á—É–∫ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á",
    "–ö–ª–∏–º–∫–æ –ï–≤–≥–µ–Ω–∏—è –ü–µ—Ç—Ä–æ–≤–Ω–∞"
];

// –§—É–Ω–∫—Ü–∏—è: —Å–∫–ª–µ–∏–≤–∞–Ω–∏–µ –§–ò–û –∏–∑ —á–∞—Å—Ç–µ–π
function getFullnameFromParts($surname, $name, $patronomyc) {
    return trim("$surname $name $patronomyc");
}

// –§—É–Ω–∫—Ü–∏—è: —Ä–∞–∑–±–∏–µ–Ω–∏–µ –§–ò–û –Ω–∞ —á–∞—Å—Ç–∏
function getPartsFromFullname($fullname) {
    $parts = explode(" ", trim($fullname));
    return [
        'surname' => $parts[0] ?? '',
        'name' => $parts[1] ?? '',
        'patronomyc' => $parts[2] ?? ''
    ];
}

// –§—É–Ω–∫—Ü–∏—è: —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –§–ò–û
function getShortName($fullname) {
    $parts = getPartsFromFullname($fullname);
    $name = $parts['name'];
    $surnameInitial = mb_substr($parts['surname'], 0, 1);
    return "$name $surnameInitial.";
}

// –§—É–Ω–∫—Ü–∏—è: –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª–∞
function getGenderFromName($fullname) {
    $parts = getPartsFromFullname($fullname);
    $genderScore = 0;

    // –û—Ç—á–µ—Å—Ç–≤–æ
    if (mb_substr($parts['patronomyc'], -3) === '–≤–Ω–∞') {
        $genderScore--;
    } elseif (mb_substr($parts['patronomyc'], -2) === '–∏—á') {
        $genderScore++;
    }

    // –ò–º—è
    if (mb_substr($parts['name'], -1) === '–∞') {
        $genderScore--;
    } elseif (in_array(mb_substr($parts['name'], -1), ['–π', '–Ω'])) {
        $genderScore++;
    }

    // –§–∞–º–∏–ª–∏—è
    if (mb_substr($parts['surname'], -2) === '–≤–∞') {
        $genderScore--;
    } elseif (mb_substr($parts['surname'], -1) === '–≤') {
        $genderScore++;
    }

    return $genderScore > 0 ? 1 : ($genderScore < 0 ? -1 : 0);
}

// –û–ø–∏—Å–∞–Ω–∏–µ –≥–µ–Ω–¥–µ—Ä–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞
function getGenderDescription($persons) {
    $total = count($persons);
    $male = count(array_filter($persons, function($person) {
        return getGenderFromName($person) === 1;
    }));
    $female = count(array_filter($persons, function($person) {
        return getGenderFromName($person) === -1;
    }));
    $undefined = $total - $male - $female;

    $malePercent = round($male / $total * 100, 1);
    $femalePercent = round($female / $total * 100, 1);
    $undefinedPercent = round($undefined / $total * 100, 1);

    return "–ì–µ–Ω–¥–µ—Ä–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –∞—É–¥–∏—Ç–æ—Ä–∏–∏:\n---------------------------\n" .
           "–ú—É–∂—á–∏–Ω—ã - {$malePercent}%\n" .
           "–ñ–µ–Ω—â–∏–Ω—ã - {$femalePercent}%\n" .
           "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å - {$undefinedPercent}%";
}

// üî∏ –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –∏–¥–µ–∞–ª—å–Ω—ã–π –ø–æ–¥–±–æ—Ä –ø–∞—Ä—ã
function getPerfectPartner($surname, $name, $patronomyc, $persons) {
    // –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –§–ò–û –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    $surname = mb_convert_case(mb_strtolower($surname), MB_CASE_TITLE, "UTF-8");
    $name = mb_convert_case(mb_strtolower($name), MB_CASE_TITLE, "UTF-8");
    $patronomyc = mb_convert_case(mb_strtolower($patronomyc), MB_CASE_TITLE, "UTF-8");

    $userFullname = getFullnameFromParts($surname, $name, $patronomyc);
    $userGender = getGenderFromName($userFullname);

    if ($userGender === 0) {
        return "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –§–ò–û.";
    }

    // –ü–æ–∏—Å–∫ –ø–∞—Ä—ã –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–≥–æ –ø–æ–ª–∞
    do {
        $randomPerson = $persons[rand(0, count($persons) - 1)];
        $randomGender = getGenderFromName($randomPerson);
    } while ($randomGender === 0 || $randomGender === $userGender);

    // –°–æ–∫—Ä–∞—â—ë–Ω–Ω—ã–µ –∏–º–µ–Ω–∞
    $shortUser = getShortName($userFullname);
    $shortMatch = getShortName($randomPerson);

    // –°–ª—É—á–∞–π–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    $compatibility = round(mt_rand(5000, 10000) / 100, 2);

    return "$shortUser + $shortMatch =\n‚ô° –ò–¥–µ–∞–ª—å–Ω–æ –Ω–∞ $compatibility% ‚ô°";
}
// --- –í—ã–≤–æ–¥ ---
echo "<h3>–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª–∞:</h3>";
foreach ($example_persons_array as $person) {
    $gender = getGenderFromName($person);
    $genderStr = $gender === 1 ? '–º—É–∂—Å–∫–æ–π' : ($gender === -1 ? '–∂–µ–Ω—Å–∫–∏–π' : '–Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π');
    echo "<strong>–§–ò–û:</strong> $person ‚Äî –ü–æ–ª: $genderStr<br>";
}

echo "<h3>–ì–µ–Ω–¥–µ—Ä–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –∞—É–¥–∏—Ç–æ—Ä–∏–∏:</h3><pre>";
echo getGenderDescription($example_persons_array);
echo "</pre>";

echo "<h3>–ò–¥–µ–∞–ª—å–Ω—ã–π –ø–æ–¥–±–æ—Ä –ø–∞—Ä—ã:</h3><pre>";
echo getPerfectPartner("–∏–≤–∞–Ω–æ–≤", "–∏–≤–∞–Ω", "–∏–≤–∞–Ω–æ–≤–∏—á", $example_persons_array);
echo "</pre>";

?>